const Logo = ({ size = 125 }) => (
  <svg width={size} height="34" viewBox="0 0 125 34" fill="none" xmlns="http://www.w3.org/2000/svg">
    <mask
      id="mask0_509_2199"
      style={{ maskType: 'luminance' }}
      maskUnits="userSpaceOnUse"
      x="24"
      y="15"
      width="23"
      height="19"
    >
      <path
        d="M42.9401 27.7976C43.6064 27.0531 44.1265 26.1629 44.4512 25.2054C44.8917 24.1533 45.1191 22.9476 44.9043 21.8191C44.8149 21.3489 44.6617 20.917 44.4411 20.5077C44.3024 20.116 44.1238 19.742 43.9173 19.3799C43.3924 18.4594 42.6378 17.7161 41.7855 17.122C39.8929 15.8027 37.5414 15.4378 35.3039 15.4363C33.8402 15.4354 32.3353 15.5238 30.91 15.9048C30.8865 16.0653 30.0189 19.4285 27.9949 21.2411C27.6188 21.5963 24.8668 23.0866 24.784 23.1004C24.7554 23.6624 24.8189 24.213 24.9737 24.7539C25.2677 25.7812 25.968 26.6452 26.761 27.3071C28.4382 28.7068 30.5123 29.5722 32.6174 29.9927C32.9578 30.1067 36.8411 30.6723 38.3881 30.2763C38.657 30.2723 39.4622 30.1513 39.4948 30.1411C41.4711 31.4301 45.6427 34.035 45.748 33.9997C45.9398 33.9399 46.0991 33.787 46.214 33.6228C46.3489 33.4299 43.9612 29.4246 42.9401 27.7978V27.7976Z"
        fill="white"
      />
    </mask>
    <g mask="url(#mask0_509_2199)">
      <path
        d="M42.7512 27.7976C43.4174 27.0531 43.9375 26.1629 44.2622 25.2054C44.7027 24.1533 44.9302 22.9476 44.7153 21.8191C44.6259 21.3489 44.4727 20.917 44.2521 20.5077C44.1134 20.116 43.9349 19.742 43.7283 19.3799C43.2034 18.4594 42.4489 17.7161 41.5966 17.122C39.7039 15.8027 37.3525 15.4378 35.1149 15.4363C33.6512 15.4354 32.1463 15.5238 30.721 15.9048C30.6976 16.0653 29.83 19.4285 27.8059 21.2411C27.4298 21.5963 24.6778 23.0866 24.595 23.1004C24.5664 23.6624 24.63 24.213 24.7848 24.7539C25.0787 25.7812 25.7791 26.6452 26.572 27.3071C28.2492 28.7068 30.3233 29.5722 32.4285 29.9927C32.7688 30.1067 36.6521 30.6723 38.1991 30.2763C38.468 30.2723 39.2732 30.1513 39.3058 30.1411C41.2821 31.4301 45.4538 34.035 45.559 33.9997C45.7509 33.9399 45.9102 33.787 46.0251 33.6228C46.1599 33.4299 43.7722 29.4246 42.7512 27.7978V27.7976Z"
        fill="#7C1513"
      />
      <path
        d="M45.4132 21.0948C45.3904 20.936 44.7862 20.0322 44.665 19.9325C44.6356 19.491 44.0438 19.2363 43.877 18.8219C43.6569 18.275 42.9803 17.9158 42.5628 17.5164C42.1629 17.1338 41.6641 16.8531 41.1611 16.6451C40.6073 16.4159 40.8625 15.3077 40.2757 15.2063C39.6274 15.0942 39.3321 14.7204 38.6795 14.6338C38.49 14.453 37.082 14.8795 36.859 15.0255C35.9987 14.906 35.021 15.5606 34.1606 15.4411C33.8934 15.4041 30.8893 15.5112 30.7987 15.7745C30.6256 16.2766 28.4323 20.363 28.4045 20.63C28.3758 20.9064 30.8679 20.4022 31.1271 20.4957C31.4949 20.6283 36.3889 21.0354 38.4206 21.1196C40.1111 21.3601 41.8389 21.4409 43.5427 21.3393C43.8767 21.3193 45.4593 21.414 45.4134 21.0951L45.4132 21.0948Z"
        fill="#292B2D"
      />
      <path
        d="M46.3629 24.2455C46.5197 23.9571 46.4083 21.9109 46.3609 21.6629C46.4449 21.032 42.8554 20.9247 42.3707 20.8881C36.4669 20.4409 31.7943 20.0593 31.8109 20.0583C30.7609 20.1189 26.4594 19.8472 25.4365 20.0583C22.5066 20.6627 23.95 20.8929 23.8878 21.8954C23.7583 23.9826 23.8398 24.0558 23.8878 24.2197C23.7276 24.6104 25.0084 24.7737 25.4051 24.8208C30.3632 25.4116 43.2391 25.7014 47.2837 25.5843C47.7506 25.5709 46.3099 24.581 46.3629 24.2454V24.2455ZM28.0588 22.4312C28.0588 22.4247 28.0585 22.4183 28.0581 22.4119C28.0977 22.4088 28.1373 22.4057 28.1768 22.4025C28.1374 22.4121 28.0982 22.4217 28.0588 22.4314V22.4312Z"
        fill="#FC142C"
      />
      <path
        d="M46.9844 25.4076C45.2098 25.3401 39.1751 25.3489 37.3995 25.3377C36.7588 25.2981 36.118 25.2607 35.4775 25.2208C34.2895 25.1467 33.1017 25.0725 31.9137 24.9985C29.7516 24.8637 26.91 24.6767 24.7472 24.5541C24.4149 24.5353 22.4438 26.8023 25.6387 27.3046C26.0165 27.6361 26.4278 27.9276 26.8595 28.1836C27.8112 28.7479 29.2791 29.8454 30.3497 30.1082C30.9105 30.2457 45.6341 34.7741 46.6851 34.3696C47.168 34.1838 47.2979 25.4197 46.9844 25.4078V25.4076Z"
        fill="#FCD92C"
      />
    </g>
    <path
      d="M32.1617 8.48151C35.1628 17.3406 26.1548 27.1314 14.7371 23.2158C13.7957 22.8933 12.9097 22.4648 12.012 22.0338C11.3379 21.71 10.7137 21.4277 9.94754 21.4175C8.48881 21.3983 0.937519 26.4665 0.00138046 25.1884C-0.0837455 24.7919 3.78689 20.7858 6.40532 18.617C6.40927 18.609 6.41346 18.6014 6.4179 18.5937C3.37138 15.8579 2.65632 10.7112 4.88021 6.68904C6.62615 3.53107 9.67761 1.30115 13.0787 0.452309C19.7114 -1.20295 29.8756 1.73221 32.162 8.48151H32.1617ZM31.6675 12.682C31.6709 12.5709 31.6746 12.416 31.6724 12.302C31.6623 11.7956 31.6186 11.2792 31.531 10.7743C31.4768 10.4605 31.4358 10.2911 31.4358 10.2911C29.6881 2.96841 18.8532 0.157695 12.5929 1.92334C9.3339 2.8427 6.38311 5.07926 5.13509 8.32922C5.13361 8.33305 5.13238 8.33637 5.13114 8.33944C5.11486 8.3839 5.09907 8.42836 5.08352 8.47308C5.05145 8.56685 5.01986 8.66089 4.99075 8.75568C3.94086 12.1597 5.32064 16.5069 7.61312 17.7196C8.75627 18.3591 7.97238 19.2146 7.31752 19.2289C4.83135 21.2882 2.12928 23.9545 2.12928 23.9545C2.12928 23.9545 9.03978 19.4678 11.4448 20.1879C12.9383 20.6351 14.1037 21.661 16.9076 22.2967C24.3896 23.9926 30.6141 19.7747 31.5328 14.0524C31.613 13.552 31.6547 13.0916 31.6677 12.6817L31.6675 12.682Z"
      fill="#292B2D"
    />
    <path
      d="M31.6723 12.3022C31.6745 12.4161 31.6708 12.571 31.6674 12.6821C31.6543 13.092 31.6126 13.5524 31.5324 14.0527C30.6138 19.7751 24.3892 23.993 16.9073 22.2971C14.1033 21.6614 12.9379 20.6354 11.4444 20.1883C9.03941 19.4682 2.12891 23.9549 2.12891 23.9549C2.12891 23.9549 4.83098 21.2886 7.31715 19.2293C7.972 19.2153 8.7559 18.3598 7.61274 17.72C5.32051 16.5075 3.94049 12.1601 4.99037 8.75607C5.01949 8.66128 5.05107 8.56725 5.08315 8.47347C5.09869 8.42875 5.11473 8.38404 5.13077 8.33983C5.132 8.33651 5.13324 8.33344 5.13472 8.32961C6.38274 5.07965 9.33352 2.84283 12.5925 1.92373C18.8531 0.158087 29.6878 2.96881 31.4354 10.2915C31.4354 10.2915 31.4766 10.4609 31.5307 10.7747C31.618 11.2798 31.6617 11.796 31.672 12.3024L31.6723 12.3022ZM27.431 10.0275C27.2576 9.84331 26.8502 9.87525 26.7273 10.0201C26.6459 10.1732 26.6795 10.4732 26.7318 10.6354C26.7409 10.664 26.751 10.6919 26.7614 10.7195C26.8441 10.6681 27.226 10.117 27.431 10.0275Z"
      fill="white"
    />
    <path
      d="M26.7272 10.0203C26.8501 9.87539 27.2575 9.84345 27.4309 10.0277C27.2261 10.1171 26.8439 10.6683 26.7613 10.7196C26.7511 10.692 26.7408 10.6642 26.7317 10.6356C26.6791 10.4733 26.6458 10.1733 26.7272 10.0203Z"
      fill="white"
    />
    <path
      d="M24.4023 15.9077C24.7609 15.5245 25.1408 15.1596 25.4732 14.7533C25.9452 14.1763 26.3931 13.5771 26.8315 12.9723C27.2789 12.3553 27.7045 11.7213 28.1358 11.092C28.3899 10.7215 28.6369 10.3456 28.8871 9.97227C28.9185 9.98249 28.9498 9.99246 28.9811 10.0027C28.9246 10.2173 28.8768 10.4345 28.8099 10.6456C28.6791 11.0582 28.5076 11.4594 28.4079 11.8795C28.2525 12.5356 27.9685 13.1246 27.6127 13.6786C27.2497 14.2438 26.8814 14.808 26.476 15.3405C26.1934 15.7115 25.8591 16.0447 25.5203 16.3636C25.2509 16.6173 24.9047 16.728 24.5383 16.6825C24.3977 16.6651 24.2632 16.5718 24.1327 16.4998C24.0382 16.4477 23.9624 16.3562 23.8654 16.3125C23.2937 16.0549 23.1106 15.5349 23.0223 14.9633C22.9747 14.6552 22.9554 14.3386 22.9599 14.0263C22.9663 13.5738 22.9653 13.1147 23.0396 12.6713C23.1736 11.8728 23.3631 11.084 23.5259 10.2907C23.5977 9.94059 23.6614 9.58874 23.7322 9.22028C23.5294 9.17888 23.408 9.31201 23.3833 9.45127C23.3317 9.74205 23.1324 9.85499 22.9007 9.99501C22.875 9.79392 22.8518 9.61173 22.8304 9.44539C22.5888 9.37589 22.3529 9.30843 22.0309 9.21593C21.8019 9.61787 21.5051 10.0648 21.2808 10.5474C20.7693 11.6472 20.4377 12.8103 20.2265 14.012C20.1675 14.3473 20.0705 14.6766 19.9711 15.0024C19.8596 15.3671 19.5704 15.5298 19.2227 15.4496C18.8176 15.3561 18.6108 15.0456 18.6394 14.6324C18.6777 14.078 18.6752 13.5204 18.7214 12.967C18.7517 12.6028 18.8489 12.2451 18.8928 11.8815C18.9138 11.7078 18.8805 11.5271 18.8729 11.3746C18.2883 11.7561 17.7063 12.1312 17.1311 12.517C17.066 12.5607 17.0238 12.6591 16.9961 12.7413C16.8039 13.3135 16.6102 13.8922 16.2115 14.3468C15.6815 14.9511 15.0328 15.3257 14.2245 15.0469C13.7088 14.8691 13.3685 14.4234 13.145 13.9262C13.0611 13.7397 13.1334 13.4777 13.1344 13.2501C13.1346 13.1737 13.1344 13.0973 13.1344 12.9713C12.9064 13.4869 12.7245 13.9612 12.4896 14.4053C12.3542 14.6611 12.156 14.8964 11.9406 15.085C11.8212 15.1895 11.5779 15.2587 11.4427 15.2043C11.0862 15.0612 10.7304 14.8785 10.4326 14.6355C10.3104 14.5359 10.3168 14.2415 10.302 14.033C10.2818 13.7463 10.2968 13.4568 10.2968 13.1686C10.2709 13.1612 10.245 13.1537 10.2191 13.1463C10.0607 13.5235 9.9181 13.9091 9.73921 14.2755C9.58549 14.5905 9.4224 14.9112 9.2065 15.1808C8.80406 15.6837 8.01375 15.6469 7.64289 15.1223C7.55925 15.004 7.52076 14.8195 7.5289 14.6692C7.55357 14.2119 7.6234 13.757 7.65079 13.2999C7.66609 13.0431 7.63179 12.783 7.62093 12.5244C7.61822 12.4621 7.62044 12.3995 7.66066 12.3269C7.673 12.3537 7.68558 12.3808 7.67102 12.3496V11.2982C7.68805 11.2969 7.70483 11.2959 7.72185 11.2946C7.72629 11.358 7.73098 11.4213 7.72975 11.4057C7.79365 10.8456 7.86595 10.2122 7.93948 9.56881C7.96267 9.56012 7.99623 9.54683 8.03028 9.53508C8.87241 9.24762 8.77643 9.43517 8.79789 10.0607C8.82405 10.8206 8.73004 11.5849 8.6913 12.3476C8.66909 12.7868 8.65355 13.2263 8.6348 13.6656C8.66268 13.6758 8.69056 13.686 8.71844 13.6962C8.79 13.5278 8.85662 13.3569 8.93508 13.1923C8.99479 13.0671 9.08584 12.956 9.13445 12.8269C9.19268 12.6721 9.21612 12.5035 9.26349 12.3435C9.2973 12.23 9.34245 12.1197 9.38835 12.0108C9.58845 11.5368 9.79004 11.0636 9.9936 10.5911C10.0183 10.5342 10.0536 10.4417 10.0913 10.4373C10.4385 10.3987 10.794 10.3216 11.1336 10.3665C11.3788 10.399 11.4173 10.7097 11.4311 10.943C11.4578 11.3917 11.4654 11.8417 11.4718 12.2914C11.4782 12.7222 11.4733 13.1532 11.4733 13.5996C11.6063 13.4857 11.7435 13.211 11.8476 12.9297C11.9105 12.76 12.0152 12.6072 12.0818 12.4388C12.105 12.3803 12.068 12.2972 12.0635 12.2252C12.0611 12.1846 12.0532 12.1296 12.0739 12.1041C12.3396 11.7775 12.2947 11.3733 12.3562 10.9913C12.4228 10.5761 12.5614 10.1731 12.63 9.75789C12.6883 9.4063 12.6912 9.04474 12.7199 8.67091C12.9891 8.61086 13.1475 8.67934 13.3138 8.95684C13.5178 9.29693 13.5731 9.66872 13.5482 10.0612C13.5393 10.201 13.5467 10.342 13.5467 10.5702C13.675 10.3108 13.768 10.1228 13.861 9.93446C13.8761 9.94136 13.8911 9.94825 13.9062 9.95541C13.8349 10.121 13.7638 10.2866 13.6925 10.4521C13.7081 10.4595 13.7236 10.4672 13.7391 10.4746C13.8129 10.3428 13.8869 10.2114 13.9602 10.0793C14.0362 9.94238 14.111 9.80465 14.2008 9.64137C14.1137 9.62834 14.0513 9.61889 13.9721 9.60688C14.0609 9.30102 14.2904 9.1748 14.5457 9.1081C15.1244 8.95709 15.6825 9.09226 16.21 9.32734C16.3682 9.39786 16.4703 9.61327 16.5873 9.77118C16.93 10.2339 17.1397 10.7547 17.199 11.3758C17.4158 11.2672 17.6169 11.1707 17.8146 11.0664C18.1418 10.8937 18.4734 10.7278 18.79 10.5359C19.0026 10.4069 19.0826 10.1994 18.9854 9.94468C19.4932 9.46047 20.1268 9.70372 20.19 10.4102C20.2815 10.2411 20.3812 10.076 20.4634 9.90226C20.7664 9.25886 21.1579 8.67244 21.7326 8.27869C21.9719 8.11464 22.3396 8.08296 22.6418 8.10315C22.9742 8.12512 23.1849 7.9437 23.459 7.81441C23.4625 7.82821 23.4704 7.8972 23.4805 7.89745C23.8168 7.90844 24.2279 7.5502 24.3076 7.19656C24.4956 6.36331 24.6903 5.53185 24.8793 4.69885C24.9008 4.6038 24.9035 4.50389 24.9185 4.37434C25.0239 4.36591 25.1643 4.31941 25.2862 4.35033C25.9625 4.52255 26.022 4.58183 25.978 5.28118C25.9504 5.72247 25.8031 6.15634 25.7002 6.59149C25.6405 6.84369 25.5628 7.09103 25.4663 7.437C25.8423 7.35907 26.1542 7.29417 26.4661 7.23003C26.5152 7.21981 26.5759 7.18966 26.6122 7.20831C26.7913 7.30005 26.9551 7.32585 27.1417 7.20806C27.196 7.17382 27.3134 7.24741 27.4022 7.27041C27.4575 7.28472 27.5138 7.30873 27.5693 7.30771C27.781 7.30388 27.9537 7.36188 28.0578 7.5732C28.1239 7.7076 28.0872 7.7886 27.9567 7.82974C27.6206 7.93527 27.2855 8.04514 26.9462 8.13892C26.434 8.28073 25.9208 8.42127 25.4034 8.54059C25.1951 8.58863 25.132 8.72304 25.091 8.90548C24.823 10.097 24.5272 11.2826 24.2916 12.481C24.0964 13.4742 24.034 14.484 24.2116 15.4935C24.2323 15.6113 24.2748 15.7253 24.3073 15.8411C24.3389 15.8635 24.3703 15.8858 24.4018 15.9083L24.4023 15.9077ZM15.666 10.0919C15.698 10.063 15.7301 10.0341 15.7622 10.0052C15.6926 9.89536 15.6405 9.75994 15.5441 9.68916C15.5098 9.66386 15.3417 9.7745 15.2803 9.85857C15.0955 10.112 14.8951 10.365 14.7705 10.6507C14.5383 11.1832 14.2743 11.719 14.3656 12.3379C14.412 12.6519 14.5682 12.7398 14.8571 12.6156C15.0765 12.5213 15.2872 12.4038 15.51 12.3197C15.6938 12.2502 15.8199 12.1835 15.9191 11.9643C15.9956 11.7954 16.0958 11.6459 16.0908 11.4543C16.0847 11.2113 16.0795 10.966 16.0427 10.7268C16.0195 10.5753 15.9532 10.4253 15.8791 10.2901C15.8345 10.2084 15.7385 10.1568 15.6657 10.0916L15.666 10.0919ZM15.4232 13.5069C15.413 13.478 15.4029 13.4489 15.3928 13.42C15.1688 13.399 14.9398 13.4013 14.7222 13.3505C14.492 13.2968 14.2728 13.1926 13.9748 13.0835C14.0054 13.4875 14.0004 13.86 14.0715 14.2162C14.1265 14.4927 14.3202 14.5507 14.5339 14.3682C14.8465 14.1015 15.1283 13.7959 15.4232 13.5069Z"
      fill="#292B2D"
    />
    <path
      d="M57.8867 19.9133L65.9727 11.7922H69.6816L61.7539 19.6848L69.9277 30.0735H66.377L59.5918 21.5657L57.8867 23.1829V30.0735H54.8281V4.70825H57.8867V19.9133ZM72.1426 30.0735V11.7922H75.0254V14.7805H75.0957C75.6934 12.759 77.3809 11.4758 79.5254 11.4758C80.0527 11.4758 80.5098 11.5637 80.7559 11.5989V14.5696C80.5098 14.4817 79.8594 14.3938 79.1211 14.3938C76.748 14.3938 75.2012 16.0989 75.2012 18.6829V30.0735H72.1426ZM88.9297 27.7883C91.8125 27.7883 94.0273 25.7668 94.0273 23.1301V21.636L89.1406 21.9348C86.6797 22.093 85.2734 23.1829 85.2734 24.9055C85.2734 26.6458 86.7324 27.7883 88.9297 27.7883ZM88.2441 30.3899C84.6055 30.3899 82.1621 28.1926 82.1621 24.9055C82.1621 21.7766 84.5703 19.8079 88.7891 19.5618L94.0273 19.2629V17.7336C94.0273 15.5012 92.5508 14.1653 90.0195 14.1653C87.6641 14.1653 86.1875 15.2727 85.8008 17.0657H82.8477C83.0586 13.9016 85.7656 11.4758 90.0898 11.4758C94.3789 11.4758 97.0859 13.7961 97.0859 17.4348V30.0735H94.1855V26.927H94.1152C93.0254 29.0188 90.7051 30.3899 88.2441 30.3899ZM101.955 30.0735V14.3059H99.4062V11.7922H101.955V9.75317C101.955 6.23755 103.59 4.56763 106.965 4.56763C107.65 4.56763 108.389 4.63794 108.828 4.70825V7.18677C108.459 7.13403 107.949 7.0813 107.439 7.0813C105.787 7.0813 104.996 7.96021 104.996 9.77075V11.7922H108.74V14.3059H105.014V30.0735H101.955ZM112.889 7.38013H115.947V11.7922H119.498V14.3059H115.947V25.1692C115.947 26.8391 116.65 27.595 118.215 27.595C118.566 27.595 119.27 27.5422 119.48 27.5071V30.0735C119.111 30.1614 118.268 30.2141 117.547 30.2141C114.189 30.2141 112.889 28.843 112.889 25.3274V14.3059H110.164V11.7922H112.889V7.38013Z"
      fill="#292B2D"
    />
  </svg>
);

const Home = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M12.0002 3.54541V19.7727" stroke={stroke} strokeWidth="2" strokeMiterlimit="10" />
    <path
      d="M12 3.54545C12 2.13909 10.8417 1 9.41173 1H3.58822C2.15823 1 1 2.13909 1 3.54545V16.2727C1 17.6791 2.15823 18.8182 3.58822 18.8182H9.41173C10.8417 18.8182 12 19.9573 12 21.3636V22"
      stroke={stroke}
      strokeWidth="2"
      strokeMiterlimit="10"
    />
    <path
      d="M12.0002 3.54545C12.0002 2.13909 13.1585 1 14.5885 1H20.412C21.842 1 23.0002 2.13909 23.0002 3.54545V16.2727C23.0002 17.6791 21.842 18.8182 20.412 18.8182H14.5885C13.1585 18.8182 12.0002 19.9573 12.0002 21.3636V22"
      stroke={stroke}
      strokeWidth="2"
      strokeMiterlimit="10"
    />
  </svg>
);

const Search = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M10.7023 20.3778C16.0608 20.3778 20.4047 16.0399 20.4047 10.6889C20.4047 5.33786 16.0608 1 10.7023 1C5.34388 1 1 5.33786 1 10.6889C1 16.0399 5.34388 20.3778 10.7023 20.3778Z"
      stroke={stroke}
      strokeWidth="2"
      strokeLinejoin="round"
    />
    <path d="M23.1768 23.1461L17.6326 17.6096" stroke={stroke} strokeWidth="2" strokeLinejoin="round" />
  </svg>
);

const Bookmark = ({ stroke, fill }) => (
  <svg width="19" height="25" viewBox="0 0 19 25" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M2.50309 22.8858C1.83643 23.2739 1 22.793 1 22.0216V2.5C1 1.94772 1.44772 1.5 2 1.5H17C17.5523 1.5 18 1.94771 18 2.5V21.9584C18 22.7367 17.1501 23.2166 16.4836 22.8147L11.1991 19.6279C10.2604 19.0618 9.08784 19.0527 8.14056 19.6042L2.50309 22.8858Z"
      fill={fill}
      stroke={stroke}
      strokeWidth="2"
    />
  </svg>
);

const Statistic = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M11.9985 23C17.9521 23 23 17.9454 23 12C23 6.05461 17.9521 1 11.9985 1C6.04488 1 1 6.05461 1 12C1 17.9454 6.04488 23 11.9985 23Z"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinejoin="round"
    />
    <path
      d="M11.9985 13.6649C13.0492 13.6649 13.9009 12.8144 13.9009 11.7652C13.9009 10.716 13.0492 9.86548 11.9985 9.86548C10.9479 9.86548 10.0962 10.716 10.0962 11.7652C10.0962 12.8144 10.9479 13.6649 11.9985 13.6649Z"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinejoin="round"
    />
    <path d="M10.6541 10.4225L5.7207 5.49585" stroke={stroke} strokeWidth="1.5" strokeLinejoin="round" />
    <path
      d="M8.13037 5.21718C9.26544 4.54594 10.5844 4.16602 11.9985 4.16602C16.2027 4.16602 19.6079 7.56651 19.6079 11.7649"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinejoin="round"
    />
    <path
      d="M5.4418 7.90234C4.76963 9.03584 4.38916 10.353 4.38916 11.7651"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinejoin="round"
    />
  </svg>
);

const ArrowDown = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M19.5 8.25L12 15.75L4.5 8.25"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const ArrowLeft = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M15.75 19.5L8.25 12L15.75 4.5"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const ArrowRight = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M16.7081 11.2929C17.0986 11.6834 17.0986 12.3166 16.7081 12.7071L10.3441 19.0711C9.9536 19.4616 9.32043 19.4616 8.92991 19.0711C8.53938 18.6805 8.53938 18.0474 8.92991 17.6569L14.5868 12L8.92991 6.34315C8.53938 5.95262 8.53939 5.31946 8.92991 4.92893C9.32043 4.53841 9.9536 4.53841 10.3441 4.92893L16.7081 11.2929ZM15 11L16.001 11L16.001 13L15 13L15 11Z"
      fill={stroke}
    />
  </svg>
);

const Confirm = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M4.5 12.75L10.5 18.75L19.5 5.25"
      stroke={stroke}
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const Error = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M11.9998 9.00006V12.7501M2.69653 16.1257C1.83114 17.6257 2.91371 19.5001 4.64544 19.5001H19.3541C21.0858 19.5001 22.1684 17.6257 21.303 16.1257L13.9487 3.37819C13.0828 1.87736 10.9167 1.87736 10.0509 3.37819L2.69653 16.1257ZM11.9998 15.7501H12.0073V15.7576H11.9998V15.7501Z"
      stroke={stroke}
      strokeWidth="1"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const PasswordShow = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M2.03555 12.3224C1.96647 12.1151 1.9664 11.8907 2.03536 11.6834C3.42372 7.50972 7.36079 4.5 12.0008 4.5C16.6387 4.5 20.5742 7.50692 21.9643 11.6776C22.0334 11.8849 22.0335 12.1093 21.9645 12.3166C20.5761 16.4903 16.6391 19.5 11.9991 19.5C7.36119 19.5 3.42564 16.4931 2.03555 12.3224Z"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M15 12C15 13.6569 13.6569 15 12 15C10.3431 15 9 13.6569 9 12C9 10.3431 10.3431 9 12 9C13.6569 9 15 10.3431 15 12Z"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const PasswordHide = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M3.97993 8.22257C3.05683 9.31382 2.35242 10.596 1.93436 12.0015C3.22565 16.338 7.24311 19.5 11.9991 19.5C12.9917 19.5 13.9521 19.3623 14.8623 19.1049M6.22763 6.22763C7.88389 5.13558 9.86771 4.5 12 4.5C16.756 4.5 20.7734 7.66205 22.0647 11.9985C21.3528 14.3919 19.8106 16.4277 17.772 17.772M6.22763 6.22763L3 3M6.22763 6.22763L9.87868 9.87868M17.772 17.772L21 21M17.772 17.772L14.1213 14.1213M14.1213 14.1213C14.6642 13.5784 15 12.8284 15 12C15 10.3431 13.6569 9 12 9C11.1716 9 10.4216 9.33579 9.87868 9.87868M14.1213 14.1213L9.87868 9.87868"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const Lock = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M12.5742 8.2041H5.2207C4.40845 8.2041 3.75 8.87055 3.75 9.69266V14.5305C3.75 15.3526 4.40845 16.0191 5.2207 16.0191H12.5742C13.3864 16.0191 14.0449 15.3526 14.0449 14.5305V9.69266C14.0449 8.87055 13.3864 8.2041 12.5742 8.2041Z"
      stroke={stroke}
      strokeWidth="2"
      strokeMiterlimit="10"
    />
    <path
      d="M12.2065 8.20425H5.58838V5.59927C5.58838 3.74973 7.07011 2.25 8.89745 2.25C10.7248 2.25 12.2065 3.74973 12.2065 5.59927V8.20425Z"
      stroke={stroke}
      strokeWidth="2"
      strokeMiterlimit="10"
    />
  </svg>
);

const Logout = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M2.81448 3.27687L11.2905 6.73778C11.9095 6.9925 12.3167 7.60162 12.3167 8.28272V20.3377C12.3167 21.4785 11.2199 22.2758 10.1611 21.9104L3.10226 19.4462C2.44525 19.2136 2 18.5824 2 17.8736V4.66123C2 3.74202 2.7276 3 3.62896 3H14.4887C15.39 3 16.1176 3.74202 16.1176 4.66123V17.3974C16.1176 18.3166 15.39 19.0586 14.4887 19.0586H12.3167"
      stroke={stroke}
      strokeLinejoin="round"
    />
    <path
      d="M10.2356 14.875C10.8853 14.875 11.412 14.3433 11.412 13.6875C11.412 13.0317 10.8853 12.5 10.2356 12.5C9.58581 12.5 9.05908 13.0317 9.05908 13.6875C9.05908 14.3433 9.58581 14.875 10.2356 14.875Z"
      fill={stroke}
    />
    <path d="M19.647 8.9375L21.9999 11.3125L19.647 13.6875" stroke={stroke} strokeLinejoin="round" />
    <path d="M21.9998 11.3125H17.2939" stroke={stroke} strokeMiterlimit="10" />
  </svg>
);

const Login = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M21.1923 21.7086L12.7869 18.0655C12.1731 17.7974 11.7692 17.1562 11.7692 16.4392L11.7692 3.74975C11.7692 2.549 12.8569 1.70964 13.9069 2.09434L20.9069 4.6882C21.5585 4.93301 22 5.59751 22 6.3436L22 20.2513C22 21.2189 21.2785 22 20.3846 22L9.61538 22C8.72154 22 8 21.2189 8 20.2513L8 6.84489C8 5.87729 8.72154 5.09622 9.61538 5.09622H11.7692"
      stroke={stroke}
      strokeLinejoin="round"
    />
    <path
      d="M14 10C13.4477 10 13 10.4477 13 11C13 11.5523 13.4477 12 14 12C14.5523 12 15 11.5523 15 11C15 10.4477 14.5523 10 14 10Z"
      fill={stroke}
    />
    <path d="M3.35303 10L5.70597 12.375L3.35303 14.75" stroke={stroke} strokeLinejoin="round" />
    <path d="M1.00017 12.375H5.70605" stroke={stroke} strokeMiterlimit="10" />
  </svg>
);

const AvatarPlus = ({ size = 33, stroke = 'currentColor' }) => (
  <svg width={size} height={size} viewBox="0 0 33 32" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M11.2382 0.427845L15.9284 1.78405C16.2674 1.88208 16.6272 1.88283 16.9666 1.78621L21.7966 0.411303C22.6418 0.170715 23.5409 0.546916 23.963 1.31768L26.4694 5.89504C26.6375 6.20214 26.888 6.45626 27.1927 6.62883L31.1787 8.88671C31.9497 9.32347 32.3117 10.2389 32.0479 11.0849L30.6672 15.513C30.554 15.876 30.5534 16.2648 30.6655 16.6282L32.06 21.1493C32.3177 21.9849 31.9661 22.8879 31.2113 23.3292L26.768 25.9266C26.4649 26.1039 26.2173 26.3624 26.0534 26.673L23.9399 30.6768C23.531 31.4515 22.6418 31.8417 21.7948 31.6181L16.9314 30.3344C16.6141 30.2507 16.2804 30.2513 15.9635 30.3363L11.2488 31.6004C10.3822 31.8328 9.47213 31.4213 9.07421 30.6172L6.96789 26.3608C6.79108 26.0035 6.50542 25.7116 6.15206 25.5271L1.84775 23.2796C1.06147 22.869 0.668508 21.9652 0.904481 21.1102L2.1597 16.562C2.24855 16.24 2.25014 15.9002 2.16431 15.5775L0.876636 10.735C0.655154 9.90215 1.02762 9.02522 1.7808 8.60629L6.20271 6.1468C6.52438 5.96789 6.78654 5.69859 6.95674 5.37222L9.04628 1.36568C9.4606 0.571256 10.3774 0.178965 11.2382 0.427845Z"
      fill="#ffffff"
    />
    <path d="M16.5 10.75V21.25" stroke={stroke} strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
    <path d="M11.25 16H21.75" stroke={stroke} strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
  </svg>
);

const Close = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M6 18L18 6M6 6L18 18" stroke={stroke} strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
  </svg>
);

const Next = ({ size = 16, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M15.7071 8.70711C16.0976 8.31658 16.0976 7.68342 15.7071 7.29289L9.34315 0.928932C8.95262 0.538408 8.31946 0.538408 7.92893 0.928932C7.53841 1.31946 7.53841 1.95262 7.92893 2.34315L13.5858 8L7.92893 13.6569C7.53841 14.0474 7.53841 14.6805 7.92893 15.0711C8.31946 15.4616 8.95262 15.4616 9.34315 15.0711L15.7071 8.70711ZM0 9H15V7H0V9Z"
      fill={stroke}
    />
  </svg>
);

const Sound = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M14 2.60227V21.4004C14 21.9217 13.3474 22.1914 12.9419 21.8438L6.78353 16.5046C6.5491 16.3009 6.24498 16.187 5.92819 16.187H3.90074C2.849 16.187 2 15.384 2 14.3893V9.61935C2 8.62462 2.849 7.82164 3.90074 7.82164H5.92819C6.24498 7.82164 6.5491 7.70778 6.78353 7.50404L12.9419 2.15883C13.3474 1.80528 14 2.08093 14 2.60227Z"
      stroke={stroke}
      strokeWidth="2"
      strokeLinejoin="round"
    />
    <path
      d="M16 7C18.6667 9.86341 18.6667 14.1366 16 17"
      stroke={stroke}
      strokeWidth="2"
      strokeMiterlimit="10"
      strokeLinecap="round"
    />
    <path
      d="M19 4C23 8.51678 23 15.4832 19 20"
      stroke={stroke}
      strokeWidth="2"
      strokeMiterlimit="10"
      strokeLinecap="round"
    />
  </svg>
);

const Stop = ({ size = 20, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <rect x="2" y="2" width={size} height={size} rx="4" stroke={stroke} strokeWidth="3" />
  </svg>
);

const User = ({ size = 20, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M12 16C10.2208 16 8.15137 14.0948 7.32486 11.4287C6.65608 11.4165 6.08194 10.6617 6.00623 9.69391C5.94314 8.76261 6.36586 7.96522 6.97785 7.81913C7.14189 4.16696 8.18922 2 12 2C15.8108 2 16.8581 4.16696 17.0221 7.81913C17.6341 7.96522 18.0569 8.76261 17.9938 9.69391C17.9181 10.6617 17.3439 11.4165 16.6751 11.4287C15.8486 14.0948 13.7792 16 12 16Z"
      stroke={stroke}
      strokeMiterlimit="10"
    />
    <path
      d="M15.5294 13C19.3176 13.931 22 15.9669 22 20.1379C19.3529 21.4166 15.4588 22 12 22C8.54118 22 4.64706 21.4166 2 20.1379C2 15.9669 4.68235 13.931 8.47059 13"
      stroke={stroke}
      strokeLinejoin="round"
    />
  </svg>
);

const Pencil = ({ size = 20, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M16.8617 4.48667L18.5492 2.79917C19.2814 2.06694 20.4686 2.06694 21.2008 2.79917C21.9331 3.53141 21.9331 4.71859 21.2008 5.45083L10.5822 16.0695C10.0535 16.5981 9.40144 16.9868 8.68489 17.2002L6 18L6.79978 15.3151C7.01323 14.5986 7.40185 13.9465 7.93052 13.4178L16.8617 4.48667ZM16.8617 4.48667L19.5 7.12499M18 14V18.75C18 19.9926 16.9926 21 15.75 21H5.25C4.00736 21 3 19.9926 3 18.75V8.24999C3 7.00735 4.00736 5.99999 5.25 5.99999H10"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const Dialog = ({ size = 30, stroke, fill }) => (
  <svg width={size} height={size} viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
    <circle cx="15" cy="15" r="15" fill={fill} />
    <path
      d="M15.3999 17.0833C14.2249 17.0833 12.8583 15.7792 12.3124 13.9542C11.8708 13.9458 11.4916 13.4292 11.4416 12.7667C11.3999 12.1292 11.6791 11.5833 12.0833 11.4833C12.1916 8.98333 12.8833 7.5 15.3999 7.5C17.9166 7.5 18.6083 8.98333 18.7166 11.4833C19.1208 11.5833 19.3999 12.1292 19.3583 12.7667C19.3083 13.4292 18.9291 13.9458 18.4874 13.9542C17.9416 15.7792 16.5749 17.0833 15.3999 17.0833Z"
      stroke={stroke}
      strokeWidth="2"
      strokeMiterlimit="10"
    />
    <path
      d="M17.9002 15.625C20.5836 16.25 22.4836 17.6167 22.4836 20.4167C20.6086 21.275 17.8502 21.6667 15.4002 21.6667C12.9502 21.6667 10.1919 21.275 8.31689 20.4167C8.31689 17.6167 10.2169 16.25 12.9002 15.625"
      stroke={stroke}
      strokeWidth="2"
      strokeLinejoin="round"
    />
  </svg>
);

const Icon = ({ name, fill = 'currentColor', stroke = 'currentColor', size }) => {
  return (
    <>
      {name === 'logo' && <Logo size={size} fill={fill} stroke={stroke} />}
      {name === 'user' && <User size={size} fill={fill} stroke={stroke} />}
      {name === 'pencil' && <Pencil size={size} stroke={stroke} />}
      {name === 'home' && <Home size={size} stroke={stroke} />}
      {name === 'search' && <Search size={size} stroke={stroke} />}
      {name === 'bookmark' && <Bookmark size={size} stroke={stroke} fill={fill} />}
      {name === 'statistic' && <Statistic size={size} stroke={stroke} />}
      {name === 'arrow-down' && <ArrowDown size={size} stroke={stroke} />}
      {name === 'arrow-left' && <ArrowLeft size={size} stroke={stroke} />}
      {name === 'arrow-right' && <ArrowRight size={size} stroke={stroke} />}
      {name === 'confirm' && <Confirm size={size} stroke={stroke} />}
      {name === 'close' && <Close size={size} stroke={stroke} />}
      {name === 'error' && <Error size={size} stroke={stroke} />}
      {name === 'password-show' && <PasswordShow size={size} stroke={stroke} />}
      {name === 'password-hide' && <PasswordHide size={size} stroke={stroke} />}
      {name === 'lock' && <Lock size={size} stroke={stroke} />}
      {name === 'login' && <Login size={size} stroke={stroke} />}
      {name === 'logout' && <Logout size={size} stroke={stroke} />}
      {name === 'avatar-plus' && <AvatarPlus size={size} stroke={stroke} />}
      {name === 'next' && <Next size={size} stroke={stroke} />}
      {name === 'sound' && <Sound size={size} stroke={stroke} />}
      {name === 'stop' && <Stop size={size} stroke={stroke} />}
      {name === 'dialog' && <Dialog size={size} stroke={stroke} fill={fill} />}
    </>
  );
};

export default Icon;

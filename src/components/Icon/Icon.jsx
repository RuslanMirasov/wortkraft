const Logo = ({ size = 120, fill, stroke }) => (
  <svg width={size} viewBox="0 0 450 124" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clipPath="url(#clip0_193_166)">
      <mask
        id="mask0_193_166"
        style={{ maskType: 'luminance' }}
        maskUnits="userSpaceOnUse"
        x="93"
        y="56"
        width="82"
        height="68"
      >
        <path
          d="M161.761 101.349C164.271 98.6341 166.23 95.3884 167.454 91.8973C169.113 88.0615 169.97 83.6658 169.161 79.5512C168.824 77.8368 168.247 76.2623 167.416 74.77C166.893 73.3418 166.22 71.9783 165.442 70.658C163.465 67.3019 160.623 64.5917 157.412 62.4258C150.282 57.6157 141.424 56.2855 132.994 56.2798C127.481 56.2767 121.811 56.5987 116.442 57.988C116.354 58.5731 113.085 70.8351 105.46 77.4438C104.044 78.7389 93.6764 84.1724 93.3645 84.2226C93.2567 86.2717 93.496 88.2794 94.0792 90.2512C95.1866 93.9966 97.8249 97.1469 100.812 99.5601C107.13 104.663 114.944 107.819 122.874 109.352C124.156 109.767 138.785 111.83 144.613 110.386C145.626 110.371 148.659 109.93 148.782 109.893C156.227 114.592 171.942 124.09 172.339 123.961C173.062 123.743 173.662 123.186 174.095 122.587C174.603 121.884 165.608 107.281 161.761 101.349V101.349Z"
          fill="white"
        />
      </mask>
      <g mask="url(#mask0_193_166)">
        <path
          d="M161.05 101.349C163.56 98.6342 165.52 95.3886 166.743 91.8974C168.402 88.0616 169.259 83.6659 168.45 79.5514C168.113 77.8369 167.536 76.2624 166.705 74.7701C166.182 73.3419 165.51 71.9784 164.732 70.6581C162.754 67.302 159.912 64.5918 156.701 62.426C149.571 57.6159 140.713 56.2856 132.284 56.2799C126.77 56.2768 121.1 56.5988 115.731 57.9881C115.643 58.5732 112.374 70.8352 104.749 77.4439C103.333 78.739 92.9655 84.1725 92.6536 84.2227C92.5458 86.2718 92.7851 88.2795 93.3683 90.2514C94.4757 93.9967 97.114 97.147 100.101 99.5602C106.419 104.663 114.233 107.819 122.163 109.352C123.445 109.767 138.074 111.83 143.902 110.386C144.915 110.371 147.949 109.93 148.071 109.893C155.516 114.593 171.231 124.09 171.628 123.961C172.351 123.743 172.951 123.186 173.384 122.587C173.892 121.884 164.897 107.281 161.05 101.349V101.349Z"
          fill="#7C1513"
        />
        <path
          d="M171.079 76.9107C170.993 76.3318 168.717 73.0366 168.26 72.6731C168.149 71.0634 165.92 70.135 165.292 68.6239C164.462 66.63 161.914 65.3205 160.341 63.864C158.834 62.469 156.955 61.4458 155.06 60.6874C152.974 59.8518 153.935 55.8114 151.725 55.4416C149.283 55.0329 148.17 53.67 145.712 53.3542C144.998 52.695 139.694 54.2501 138.854 54.7824C135.613 54.3467 131.93 56.7336 128.688 56.2979C127.682 56.1629 116.365 56.5534 116.024 57.5133C115.371 59.3439 107.109 74.2426 107.004 75.2163C106.896 76.2239 116.284 74.3857 117.261 74.7266C118.646 75.21 137.083 76.6941 144.736 77.0011C151.105 77.8781 157.613 78.1725 164.032 77.8021C165.29 77.7293 171.252 78.0746 171.079 76.9119L171.079 76.9107Z"
          fill={stroke}
        />
        <path
          d="M174.656 88.3986C175.246 87.3471 174.827 79.8864 174.648 78.9824C174.965 76.6822 161.442 76.2911 159.617 76.1574C137.376 74.527 119.774 73.1358 119.836 73.1321C115.881 73.3531 99.6764 72.3624 95.823 73.1321C84.7857 75.3356 90.2232 76.175 89.9889 79.8299C89.501 87.44 89.8079 87.7068 89.9889 88.3044C89.3851 89.7289 94.2101 90.324 95.7046 90.496C114.382 92.65 162.888 93.7065 178.125 93.2796C179.884 93.2307 174.456 89.6215 174.656 88.398V88.3986ZM105.702 81.7836C105.702 81.7598 105.7 81.7365 105.699 81.7133C105.848 81.702 105.997 81.6907 106.146 81.6788C105.998 81.7139 105.85 81.7491 105.702 81.7842V81.7836Z"
          fill="#FC142C"
        />
        <path
          d="M176.997 92.6354C170.312 92.3893 147.578 92.4214 140.889 92.3806C138.476 92.2362 136.062 92.0999 133.649 91.9543C129.174 91.6843 124.699 91.4138 120.223 91.1438C112.079 90.6523 101.374 89.9705 93.2261 89.5235C91.9746 89.4551 84.5489 97.7205 96.5847 99.5518C98.0078 100.76 99.5574 101.823 101.183 102.757C104.769 104.814 110.298 108.815 114.332 109.773C116.444 110.275 171.91 126.785 175.87 125.31C177.689 124.633 178.178 92.6794 176.997 92.6361V92.6354Z"
          fill="#FCD92C"
        />
      </g>
      <path
        d="M121.158 30.9231C132.464 63.223 98.529 98.9196 55.5167 84.6436C51.9706 83.4679 48.6327 81.9055 45.2511 80.3339C42.7117 79.1536 40.36 78.1241 37.4739 78.0869C31.9786 78.017 3.53177 96.4955 0.00520038 91.8356C-0.315482 90.3897 14.2658 75.7839 24.1298 67.8764C24.1447 67.8475 24.1605 67.8196 24.1772 67.7916C12.7005 57.8169 10.0068 39.0524 18.3845 24.3879C24.9617 12.8741 36.457 4.74391 49.2694 1.64909C74.2557 -4.38588 112.546 6.31553 121.159 30.9231H121.158ZM119.296 46.2379C119.309 45.8326 119.323 45.2681 119.315 44.8526C119.277 43.0061 119.112 41.1233 118.782 39.2825C118.578 38.1384 118.423 37.5208 118.423 37.5208C111.84 10.8227 71.0228 0.574945 47.4392 7.01238C35.1622 10.3643 24.0461 18.5187 19.3447 30.3679C19.3391 30.3819 19.3344 30.394 19.3298 30.4051C19.2684 30.5672 19.2089 30.7293 19.1504 30.8924C19.0296 31.2343 18.9106 31.5771 18.8009 31.9227C14.8458 44.3337 20.0436 60.1832 28.6798 64.6046C32.9862 66.9364 30.0331 70.0555 27.5662 70.1076C18.2004 77.6155 8.02132 87.3368 8.02132 87.3368C8.02132 87.3368 34.0542 70.9787 43.1142 73.604C48.7405 75.2343 53.1306 78.9747 63.6936 81.2925C91.8792 87.4757 115.328 72.0975 118.789 51.2341C119.091 49.41 119.248 47.7312 119.297 46.2369L119.296 46.2379Z"
        fill={stroke}
      />
      <path
        d="M119.314 44.8534C119.322 45.2689 119.308 45.8334 119.295 46.2387C119.246 47.733 119.089 49.4117 118.787 51.2358C115.326 72.0993 91.8773 87.4774 63.6916 81.2943C53.1287 78.9764 48.7386 75.236 43.1122 73.6057C34.0523 70.9804 8.01938 87.3386 8.01938 87.3386C8.01938 87.3386 18.1985 77.6172 27.5643 70.1093C30.0312 70.0581 32.9842 66.9391 28.6778 64.6063C20.0426 60.1858 14.8439 44.3354 18.7989 31.9245C18.9086 31.5788 19.0276 31.236 19.1484 30.8941C19.207 30.7311 19.2674 30.568 19.3278 30.4069C19.3325 30.3948 19.3371 30.3836 19.3427 30.3696C24.0442 18.5204 35.1602 10.3651 47.4373 7.01411C71.0218 0.576671 111.838 10.8244 118.421 37.5225C118.421 37.5225 118.577 38.1402 118.78 39.2842C119.109 41.126 119.274 43.0078 119.313 44.8543L119.314 44.8534ZM103.336 36.5602C102.683 35.8885 101.148 36.0049 100.685 36.5331C100.379 37.0912 100.505 38.1849 100.702 38.7765C100.736 38.8808 100.775 38.9823 100.814 39.083C101.125 38.8957 102.564 36.8862 103.336 36.5602Z"
        fill="white"
      />
      <path
        d="M100.685 36.5332C101.148 36.0049 102.683 35.8885 103.336 36.5602C102.565 36.8862 101.125 38.8957 100.814 39.083C100.776 38.9824 100.736 38.8808 100.702 38.7765C100.504 38.1849 100.379 37.0912 100.685 36.5332Z"
        fill="white"
      />
      <path
        d="M91.9275 57.9987C93.2781 56.6013 94.7096 55.2709 95.9616 53.7897C97.7398 51.6861 99.4269 49.5015 101.079 47.2963C102.764 45.0465 104.367 42.7352 105.992 40.4406C106.949 39.0898 107.88 37.7194 108.822 36.3583C108.94 36.3955 109.058 36.4319 109.177 36.4691C108.964 37.2517 108.783 38.0436 108.531 38.8131C108.039 40.3176 107.393 41.7803 107.017 43.3118C106.432 45.7042 105.362 47.8516 104.021 49.8713C102.654 51.932 101.266 53.989 99.7392 55.9305C98.6749 57.2832 97.4154 58.498 96.1392 59.6607C95.1241 60.5858 93.82 60.9892 92.4397 60.8233C91.9099 60.76 91.4033 60.4199 90.9116 60.1572C90.5556 59.9672 90.2702 59.6337 89.9049 59.4744C87.7512 58.5353 87.0615 56.6395 86.7288 54.5554C86.5494 53.4319 86.4769 52.2777 86.4936 51.1392C86.5178 49.4893 86.5141 47.8152 86.7938 46.1989C87.2986 43.2876 88.0124 40.4117 88.6259 37.5191C88.8964 36.2428 89.1362 34.9599 89.403 33.6165C88.6389 33.4656 88.1816 33.951 88.0887 34.4587C87.8944 35.5189 87.1433 35.9307 86.2705 36.4412C86.1739 35.708 86.0865 35.0438 86.0056 34.4373C85.0956 34.1839 84.207 33.938 82.994 33.6007C82.1314 35.0661 81.0132 36.6955 80.1683 38.4553C78.2414 42.465 76.9921 46.7057 76.1965 51.0871C75.9743 52.3093 75.609 53.5102 75.2344 54.698C74.8143 56.0274 73.7249 56.6208 72.4152 56.3283C70.8889 55.9873 70.11 54.8554 70.2178 53.349C70.3619 51.3274 70.3526 49.2946 70.5264 47.2768C70.6408 45.9492 71.007 44.645 71.1724 43.3193C71.2514 42.6858 71.126 42.0271 71.0971 41.471C68.8951 42.8619 66.7024 44.2295 64.5357 45.6362C64.2903 45.7955 64.1314 46.1542 64.0273 46.4542C63.3032 48.54 62.5735 50.6501 61.0714 52.3075C59.0748 54.5107 56.6311 55.8765 53.586 54.8601C51.6434 54.2117 50.3616 52.5869 49.5194 50.774C49.2034 50.094 49.4757 49.1391 49.4795 48.309C49.4804 48.0304 49.4795 47.7519 49.4795 47.2926C48.6206 49.1726 47.9355 50.9017 47.0506 52.5208C46.5403 53.4533 45.7939 54.3114 44.9825 54.9989C44.5326 55.3799 43.6161 55.6324 43.1067 55.434C41.7636 54.9123 40.4232 54.2461 39.3013 53.3602C38.8412 52.9969 38.8653 51.9236 38.8096 51.1634C38.7333 50.1182 38.7901 49.0627 38.7901 48.0118C38.6925 47.9848 38.5949 47.9578 38.4973 47.9308C37.9005 49.3058 37.3632 50.7116 36.6893 52.0475C36.1103 53.1962 35.4959 54.3654 34.6825 55.3482C33.1665 57.1817 30.1893 57.0475 28.7922 55.1349C28.4771 54.7036 28.3321 54.0309 28.3628 53.4832C28.4557 51.8156 28.7188 50.1573 28.8219 48.4907C28.8796 47.5544 28.7504 46.606 28.7095 45.6632C28.6993 45.4359 28.7076 45.2077 28.8591 44.9431C28.9056 45.0409 28.953 45.1396 28.8982 45.026V41.1924C28.9623 41.1878 29.0255 41.184 29.0896 41.1794C29.1064 41.4104 29.124 41.6414 29.1194 41.5846C29.3601 39.5425 29.6325 37.2331 29.9095 34.8873C29.9969 34.8556 30.1233 34.8071 30.2515 34.7643C33.424 33.7162 33.0624 34.4 33.1433 36.6806C33.2418 39.4512 32.8876 42.2377 32.7417 45.0185C32.6581 46.62 32.5995 48.2223 32.5288 49.8238C32.6339 49.8611 32.7389 49.8983 32.844 49.9356C33.1135 49.3217 33.3645 48.6984 33.6601 48.0984C33.885 47.642 34.228 47.2367 34.4111 46.7662C34.6305 46.2017 34.7188 45.5868 34.8972 45.0036C35.0246 44.59 35.1947 44.1875 35.3676 43.7907C36.1214 42.0625 36.8808 40.3372 37.6477 38.6146C37.7406 38.4069 37.8735 38.0697 38.0158 38.0538C39.3236 37.9131 40.663 37.6318 41.942 37.7958C42.866 37.9141 43.011 39.0469 43.063 39.8975C43.1634 41.5334 43.1922 43.1739 43.2164 44.8136C43.2406 46.3843 43.222 47.9559 43.222 49.5834C43.723 49.1679 44.2398 48.1665 44.632 47.1407C44.8691 46.5222 45.2632 45.9651 45.5142 45.3511C45.6015 45.1378 45.4621 44.835 45.4454 44.5723C45.4361 44.4242 45.4063 44.2239 45.4844 44.1307C46.4855 42.9401 46.3163 41.4663 46.5478 40.0735C46.7987 38.5597 47.3211 37.0905 47.5795 35.5767C47.7989 34.2948 47.8101 32.9765 47.9179 31.6136C48.932 31.3947 49.5287 31.6443 50.1552 32.6561C50.9239 33.896 51.1321 35.2515 51.0383 36.6825C51.0048 37.1921 51.0327 37.7063 51.0327 38.5383C51.516 37.5927 51.8664 36.907 52.2169 36.2204C52.2736 36.2456 52.3303 36.2707 52.387 36.2968C52.1183 36.9005 51.8506 37.5042 51.582 38.1078C51.6406 38.1349 51.6991 38.1628 51.7577 38.1898C52.0356 37.7091 52.3145 37.2303 52.5905 36.7486C52.8768 36.2493 53.1585 35.7471 53.4968 35.1518C53.1687 35.1043 52.9335 35.0699 52.6352 35.0261C52.9698 33.9109 53.8342 33.4507 54.7963 33.2076C56.976 32.657 59.0785 33.1498 61.0658 34.0069C61.6617 34.264 62.0465 35.0494 62.4871 35.6251C63.7782 37.3122 64.5682 39.2109 64.7913 41.4756C65.6084 41.0797 66.3659 40.7275 67.1105 40.3474C68.343 39.7177 69.5923 39.1131 70.7848 38.4134C71.5861 37.9429 71.8872 37.1865 71.521 36.2577C73.4339 34.4923 75.8209 35.3792 76.0589 37.9551C76.4037 37.3383 76.7793 36.7365 77.0888 36.103C78.2302 33.7572 79.7054 31.6192 81.8702 30.1836C82.7718 29.5855 84.1568 29.4699 85.2955 29.5435C86.5475 29.6237 87.3413 28.9622 88.374 28.4908C88.387 28.5411 88.4168 28.7927 88.4549 28.7936C89.7218 28.8337 91.2704 27.5275 91.5706 26.2382C92.2789 23.2002 93.0123 20.1687 93.7243 17.1317C93.8052 16.7851 93.8154 16.4209 93.8721 15.9485C94.269 15.9178 94.7979 15.7482 95.2571 15.861C97.8049 16.4889 98.0289 16.705 97.8634 19.2548C97.7593 20.8637 97.2044 22.4456 96.8168 24.0321C96.5918 24.9516 96.299 25.8534 95.9356 27.1148C97.3522 26.8307 98.5271 26.5941 99.702 26.3602C99.887 26.323 100.116 26.213 100.252 26.281C100.927 26.6155 101.544 26.7096 102.247 26.2801C102.451 26.1553 102.894 26.4236 103.229 26.5074C103.437 26.5596 103.649 26.6472 103.858 26.6434C104.655 26.6295 105.306 26.8409 105.698 27.6114C105.947 28.1014 105.809 28.3967 105.317 28.5467C104.051 28.9315 102.789 29.3321 101.511 29.674C99.5812 30.191 97.6478 30.7034 95.6986 31.1385C94.9141 31.3136 94.6761 31.8036 94.5218 32.4688C93.5124 36.8129 92.3979 41.1356 91.5102 45.5048C90.7749 49.126 90.5398 52.8077 91.209 56.4885C91.2871 56.918 91.447 57.3335 91.5697 57.7555C91.6887 57.8375 91.8067 57.9186 91.9257 58.0005L91.9275 57.9987ZM59.0163 36.7943C59.1371 36.689 59.2579 36.5837 59.3788 36.4785C59.1166 36.0779 58.9205 35.5841 58.5571 35.3261C58.4279 35.2338 57.7949 35.6372 57.5634 35.9437C56.8672 36.8679 56.1125 37.7902 55.6431 38.8317C54.7684 40.7732 53.7738 42.7268 54.1177 44.9831C54.2925 46.1281 54.8809 46.4486 55.9693 45.9958C56.7957 45.652 57.5895 45.2235 58.4288 44.917C59.1213 44.6636 59.5963 44.4204 59.9699 43.6211C60.2581 43.0053 60.6355 42.4603 60.6169 41.7616C60.5936 40.8757 60.5741 39.9813 60.4356 39.1093C60.3483 38.5569 60.0982 38.01 59.8194 37.5172C59.6511 37.2191 59.2895 37.0309 59.0153 36.7933L59.0163 36.7943ZM58.1016 49.2453C58.0635 49.14 58.0254 49.0338 57.9873 48.9285C57.1433 48.8521 56.2807 48.8605 55.4609 48.6751C54.5936 48.4795 53.7682 48.0994 52.6454 47.7016C52.7606 49.1745 52.742 50.5327 53.0097 51.8314C53.217 52.8394 53.9467 53.0509 54.7517 52.3857C55.9293 51.4131 56.9909 50.2989 58.1016 49.2453Z"
        fill={stroke}
      />
      <path
        d="M423.082 32.9651H437.308V49.2894H450.42V60.5001H437.308V98.5247C437.308 104.491 439.931 107.179 445.7 107.179C447.142 107.179 449.437 107.047 450.354 106.851V118.061C448.781 118.455 445.634 118.717 442.487 118.717C428.523 118.717 423.082 113.407 423.082 100.098V60.5001H413.051V49.2894H423.082V32.9651Z"
        fill={stroke}
      />
      <path
        d="M380.484 118.258V60.5001H370.978V49.4205H380.484V42.6679C380.484 29.2937 386.778 23 400.807 23C403.692 23 406.904 23.3278 408.74 23.6556V34.1451C407.363 33.8829 405.462 33.7518 403.561 33.7518C397.398 33.7518 394.514 36.8331 394.514 42.9301V49.4205H408.478V60.5001H394.71V118.258H380.484Z"
        fill={stroke}
      />
      <path
        d="M331.527 108.227C341.426 108.227 349.162 101.409 349.162 92.4275V86.9861L332.182 88.035C323.725 88.6251 318.939 92.362 318.939 98.2623C318.939 104.294 323.922 108.227 331.527 108.227ZM327.593 119.438C314.088 119.438 304.647 111.046 304.647 98.6557C304.647 86.5927 313.891 79.1845 330.281 78.2667L349.162 77.1522V71.8418C349.162 64.1714 343.983 59.5822 335.329 59.5822C327.134 59.5822 322.02 63.5158 320.775 69.6784H307.401C308.187 57.222 318.808 48.0437 335.853 48.0437C352.571 48.0437 363.257 56.8942 363.257 70.7273V118.258H349.687V106.916H349.359C345.36 114.587 336.64 119.438 327.593 119.438Z"
        fill={stroke}
      />
      <path
        d="M265.458 118.258V49.2894H278.963V61.0246H279.291C281.586 52.9608 287.748 48.1749 295.878 48.1749C297.91 48.1749 299.68 48.5027 300.729 48.6994V61.8769C299.615 61.418 297.124 61.0902 294.37 61.0902C285.257 61.0902 279.619 67.1872 279.619 76.9556V118.258H265.458Z"
        fill={stroke}
      />
      <path
        d="M197.685 118.258H183V23.6555H197.685V68.695H198.275L237.808 23.6555H255.247L217.747 65.5481L258.394 118.258H240.168L207.388 75.6443L197.685 86.7238V118.258Z"
        fill={stroke}
      />
    </g>
    <defs>
      <clipPath id="clip0_193_166">
        <rect width="450" height="124" fill="white" />
      </clipPath>
    </defs>
  </svg>
);

const Home = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M12.0002 3.54541V19.7727" stroke={stroke} strokeWidth="2" strokeMiterlimit="10" />
    <path
      d="M12 3.54545C12 2.13909 10.8417 1 9.41173 1H3.58822C2.15823 1 1 2.13909 1 3.54545V16.2727C1 17.6791 2.15823 18.8182 3.58822 18.8182H9.41173C10.8417 18.8182 12 19.9573 12 21.3636V22"
      stroke={stroke}
      strokeWidth="2"
      strokeMiterlimit="10"
    />
    <path
      d="M12.0002 3.54545C12.0002 2.13909 13.1585 1 14.5885 1H20.412C21.842 1 23.0002 2.13909 23.0002 3.54545V16.2727C23.0002 17.6791 21.842 18.8182 20.412 18.8182H14.5885C13.1585 18.8182 12.0002 19.9573 12.0002 21.3636V22"
      stroke={stroke}
      strokeWidth="2"
      strokeMiterlimit="10"
    />
  </svg>
);

const Search = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M10.7023 20.3778C16.0608 20.3778 20.4047 16.0399 20.4047 10.6889C20.4047 5.33786 16.0608 1 10.7023 1C5.34388 1 1 5.33786 1 10.6889C1 16.0399 5.34388 20.3778 10.7023 20.3778Z"
      stroke={stroke}
      strokeWidth="2"
      strokeLinejoin="round"
    />
    <path d="M23.1768 23.1461L17.6326 17.6096" stroke={stroke} strokeWidth="2" strokeLinejoin="round" />
  </svg>
);

const Bookmark = ({ stroke, fill }) => (
  <svg width={20} height={24} viewBox="0 0 20 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M6.46429 7.69565L6 1.47826L12.5 1L17.6071 1.47826L18.5357 3.3913L19 23L16.6786 22.0435L13.4286 18.6957L12.0357 18.2174L7.85714 22.0435H6V17.7391L6.46429 7.69565Z"
      fill={fill}
    />
    <path
      d="M3.5 1H16.3333C17.8067 1 19 2.19624 19 3.67316V22.3319C19 22.8932 18.3533 23.2006 17.92 22.8531L12.7533 18.7097C12.5067 18.5159 12.1667 18.5159 11.92 18.7097L6.75333 22.8531C6.32 23.2006 5.67333 22.8932 5.67333 22.3319V3.00487C5.67333 1.89551 4.60667 1 3.5 1ZM3.5 1C2.84345 1 2.2756 1.23755 1.84778 1.63162C1.31553 2.12188 1 2.85439 1 3.67316V7.68291C1 8.05047 1.3 8.3512 1.66667 8.3512H5.5"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinejoin="round"
    />
  </svg>
);

const Statistic = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M11.9985 23C17.9521 23 23 17.9454 23 12C23 6.05461 17.9521 1 11.9985 1C6.04488 1 1 6.05461 1 12C1 17.9454 6.04488 23 11.9985 23Z"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinejoin="round"
    />
    <path
      d="M11.9985 13.6649C13.0492 13.6649 13.9009 12.8144 13.9009 11.7652C13.9009 10.716 13.0492 9.86548 11.9985 9.86548C10.9479 9.86548 10.0962 10.716 10.0962 11.7652C10.0962 12.8144 10.9479 13.6649 11.9985 13.6649Z"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinejoin="round"
    />
    <path d="M10.6541 10.4225L5.7207 5.49585" stroke={stroke} strokeWidth="1.5" strokeLinejoin="round" />
    <path
      d="M8.13037 5.21718C9.26544 4.54594 10.5844 4.16602 11.9985 4.16602C16.2027 4.16602 19.6079 7.56651 19.6079 11.7649"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinejoin="round"
    />
    <path
      d="M5.4418 7.90234C4.76963 9.03584 4.38916 10.353 4.38916 11.7651"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinejoin="round"
    />
  </svg>
);

const ArrowDown = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M19.5 8.25L12 15.75L4.5 8.25"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const ArrowLeft = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M15.75 19.5L8.25 12L15.75 4.5"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const ArrowRight = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M16.7081 11.2929C17.0986 11.6834 17.0986 12.3166 16.7081 12.7071L10.3441 19.0711C9.9536 19.4616 9.32043 19.4616 8.92991 19.0711C8.53938 18.6805 8.53938 18.0474 8.92991 17.6569L14.5868 12L8.92991 6.34315C8.53938 5.95262 8.53939 5.31946 8.92991 4.92893C9.32043 4.53841 9.9536 4.53841 10.3441 4.92893L16.7081 11.2929ZM15 11L16.001 11L16.001 13L15 13L15 11Z"
      fill={stroke}
    />
  </svg>
);

const Confirm = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M4.5 12.75L10.5 18.75L19.5 5.25"
      stroke={stroke}
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const Error = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M11.9998 9.00006V12.7501M2.69653 16.1257C1.83114 17.6257 2.91371 19.5001 4.64544 19.5001H19.3541C21.0858 19.5001 22.1684 17.6257 21.303 16.1257L13.9487 3.37819C13.0828 1.87736 10.9167 1.87736 10.0509 3.37819L2.69653 16.1257ZM11.9998 15.7501H12.0073V15.7576H11.9998V15.7501Z"
      stroke={stroke}
      strokeWidth="1"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const PasswordShow = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M2.03555 12.3224C1.96647 12.1151 1.9664 11.8907 2.03536 11.6834C3.42372 7.50972 7.36079 4.5 12.0008 4.5C16.6387 4.5 20.5742 7.50692 21.9643 11.6776C22.0334 11.8849 22.0335 12.1093 21.9645 12.3166C20.5761 16.4903 16.6391 19.5 11.9991 19.5C7.36119 19.5 3.42564 16.4931 2.03555 12.3224Z"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M15 12C15 13.6569 13.6569 15 12 15C10.3431 15 9 13.6569 9 12C9 10.3431 10.3431 9 12 9C13.6569 9 15 10.3431 15 12Z"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const PasswordHide = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M3.97993 8.22257C3.05683 9.31382 2.35242 10.596 1.93436 12.0015C3.22565 16.338 7.24311 19.5 11.9991 19.5C12.9917 19.5 13.9521 19.3623 14.8623 19.1049M6.22763 6.22763C7.88389 5.13558 9.86771 4.5 12 4.5C16.756 4.5 20.7734 7.66205 22.0647 11.9985C21.3528 14.3919 19.8106 16.4277 17.772 17.772M6.22763 6.22763L3 3M6.22763 6.22763L9.87868 9.87868M17.772 17.772L21 21M17.772 17.772L14.1213 14.1213M14.1213 14.1213C14.6642 13.5784 15 12.8284 15 12C15 10.3431 13.6569 9 12 9C11.1716 9 10.4216 9.33579 9.87868 9.87868M14.1213 14.1213L9.87868 9.87868"
      stroke={stroke}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const Lock = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M12.5742 8.2041H5.2207C4.40845 8.2041 3.75 8.87055 3.75 9.69266V14.5305C3.75 15.3526 4.40845 16.0191 5.2207 16.0191H12.5742C13.3864 16.0191 14.0449 15.3526 14.0449 14.5305V9.69266C14.0449 8.87055 13.3864 8.2041 12.5742 8.2041Z"
      stroke={stroke}
      strokeWidth="2"
      strokeMiterlimit="10"
    />
    <path
      d="M12.2065 8.20425H5.58838V5.59927C5.58838 3.74973 7.07011 2.25 8.89745 2.25C10.7248 2.25 12.2065 3.74973 12.2065 5.59927V8.20425Z"
      stroke={stroke}
      strokeWidth="2"
      strokeMiterlimit="10"
    />
  </svg>
);

const Logout = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M2.81448 3.27687L11.2905 6.73778C11.9095 6.9925 12.3167 7.60162 12.3167 8.28272V20.3377C12.3167 21.4785 11.2199 22.2758 10.1611 21.9104L3.10226 19.4462C2.44525 19.2136 2 18.5824 2 17.8736V4.66123C2 3.74202 2.7276 3 3.62896 3H14.4887C15.39 3 16.1176 3.74202 16.1176 4.66123V17.3974C16.1176 18.3166 15.39 19.0586 14.4887 19.0586H12.3167"
      stroke={stroke}
      strokeLinejoin="round"
    />
    <path
      d="M10.2356 14.875C10.8853 14.875 11.412 14.3433 11.412 13.6875C11.412 13.0317 10.8853 12.5 10.2356 12.5C9.58581 12.5 9.05908 13.0317 9.05908 13.6875C9.05908 14.3433 9.58581 14.875 10.2356 14.875Z"
      fill={stroke}
    />
    <path d="M19.647 8.9375L21.9999 11.3125L19.647 13.6875" stroke={stroke} strokeLinejoin="round" />
    <path d="M21.9998 11.3125H17.2939" stroke={stroke} strokeMiterlimit="10" />
  </svg>
);

const Login = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M21.1923 21.7086L12.7869 18.0655C12.1731 17.7974 11.7692 17.1562 11.7692 16.4392L11.7692 3.74975C11.7692 2.549 12.8569 1.70964 13.9069 2.09434L20.9069 4.6882C21.5585 4.93301 22 5.59751 22 6.3436L22 20.2513C22 21.2189 21.2785 22 20.3846 22L9.61538 22C8.72154 22 8 21.2189 8 20.2513L8 6.84489C8 5.87729 8.72154 5.09622 9.61538 5.09622H11.7692"
      stroke={stroke}
      strokeLinejoin="round"
    />
    <path
      d="M14 10C13.4477 10 13 10.4477 13 11C13 11.5523 13.4477 12 14 12C14.5523 12 15 11.5523 15 11C15 10.4477 14.5523 10 14 10Z"
      fill={stroke}
    />
    <path d="M4.35303 10L6.70597 12.375L4.35303 14.75" stroke={stroke} strokeLinejoin="round" />
    <path d="M2.00017 12.375H6.70605" stroke={stroke} strokeMiterlimit="10" />
  </svg>
);

const AvatarPlus = ({ size = 33, stroke = 'currentColor' }) => (
  <svg width={size} height={size} viewBox="0 0 33 32" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M11.2382 0.427845L15.9284 1.78405C16.2674 1.88208 16.6272 1.88283 16.9666 1.78621L21.7966 0.411303C22.6418 0.170715 23.5409 0.546916 23.963 1.31768L26.4694 5.89504C26.6375 6.20214 26.888 6.45626 27.1927 6.62883L31.1787 8.88671C31.9497 9.32347 32.3117 10.2389 32.0479 11.0849L30.6672 15.513C30.554 15.876 30.5534 16.2648 30.6655 16.6282L32.06 21.1493C32.3177 21.9849 31.9661 22.8879 31.2113 23.3292L26.768 25.9266C26.4649 26.1039 26.2173 26.3624 26.0534 26.673L23.9399 30.6768C23.531 31.4515 22.6418 31.8417 21.7948 31.6181L16.9314 30.3344C16.6141 30.2507 16.2804 30.2513 15.9635 30.3363L11.2488 31.6004C10.3822 31.8328 9.47213 31.4213 9.07421 30.6172L6.96789 26.3608C6.79108 26.0035 6.50542 25.7116 6.15206 25.5271L1.84775 23.2796C1.06147 22.869 0.668508 21.9652 0.904481 21.1102L2.1597 16.562C2.24855 16.24 2.25014 15.9002 2.16431 15.5775L0.876636 10.735C0.655154 9.90215 1.02762 9.02522 1.7808 8.60629L6.20271 6.1468C6.52438 5.96789 6.78654 5.69859 6.95674 5.37222L9.04628 1.36568C9.4606 0.571256 10.3774 0.178965 11.2382 0.427845Z"
      fill="#ffffff"
    />
    <path d="M16.5 10.75V21.25" stroke={stroke} strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
    <path d="M11.25 16H21.75" stroke={stroke} strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
  </svg>
);

const Close = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M6 18L18 6M6 6L18 18" stroke={stroke} strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
  </svg>
);

const Next = ({ size = 16, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M15.7071 8.70711C16.0976 8.31658 16.0976 7.68342 15.7071 7.29289L9.34315 0.928932C8.95262 0.538408 8.31946 0.538408 7.92893 0.928932C7.53841 1.31946 7.53841 1.95262 7.92893 2.34315L13.5858 8L7.92893 13.6569C7.53841 14.0474 7.53841 14.6805 7.92893 15.0711C8.31946 15.4616 8.95262 15.4616 9.34315 15.0711L15.7071 8.70711ZM0 9H15V7H0V9Z"
      fill={stroke}
    />
  </svg>
);

const Sound = ({ size = 24, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M14 2.60227V21.4004C14 21.9217 13.3474 22.1914 12.9419 21.8438L6.78353 16.5046C6.5491 16.3009 6.24498 16.187 5.92819 16.187H3.90074C2.849 16.187 2 15.384 2 14.3893V9.61935C2 8.62462 2.849 7.82164 3.90074 7.82164H5.92819C6.24498 7.82164 6.5491 7.70778 6.78353 7.50404L12.9419 2.15883C13.3474 1.80528 14 2.08093 14 2.60227Z"
      stroke={stroke}
      strokeWidth="2"
      strokeLinejoin="round"
    />
    <path
      d="M16 7C18.6667 9.86341 18.6667 14.1366 16 17"
      stroke={stroke}
      strokeWidth="2"
      strokeMiterlimit="10"
      strokeLinecap="round"
    />
    <path
      d="M19 4C23 8.51678 23 15.4832 19 20"
      stroke={stroke}
      strokeWidth="2"
      strokeMiterlimit="10"
      strokeLinecap="round"
    />
  </svg>
);

const Stop = ({ size = 20, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <rect x="2" y="2" width={size} height={size} rx="4" stroke={stroke} strokeWidth="3" />
  </svg>
);

const User = ({ size = 20, stroke }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M12 16C10.2208 16 8.15137 14.0948 7.32486 11.4287C6.65608 11.4165 6.08194 10.6617 6.00623 9.69391C5.94314 8.76261 6.36586 7.96522 6.97785 7.81913C7.14189 4.16696 8.18922 2 12 2C15.8108 2 16.8581 4.16696 17.0221 7.81913C17.6341 7.96522 18.0569 8.76261 17.9938 9.69391C17.9181 10.6617 17.3439 11.4165 16.6751 11.4287C15.8486 14.0948 13.7792 16 12 16Z"
      stroke={stroke}
      strokeMiterlimit="10"
    />
    <path
      d="M15.5294 13C19.3176 13.931 22 15.9669 22 20.1379C19.3529 21.4166 15.4588 22 12 22C8.54118 22 4.64706 21.4166 2 20.1379C2 15.9669 4.68235 13.931 8.47059 13"
      stroke={stroke}
      strokeLinejoin="round"
    />
  </svg>
);

const Icon = ({ name, fill = 'currentColor', stroke = 'currentColor', size }) => {
  return (
    <>
      {name === 'logo' && <Logo size={size} fill={fill} stroke={stroke} />}
      {name === 'user' && <User size={size} fill={fill} stroke={stroke} />}
      {name === 'home' && <Home size={size} stroke={stroke} />}
      {name === 'search' && <Search size={size} stroke={stroke} />}
      {name === 'bookmark' && <Bookmark size={size} stroke={stroke} fill={fill} />}
      {name === 'statistic' && <Statistic size={size} stroke={stroke} />}
      {name === 'arrow-down' && <ArrowDown size={size} stroke={stroke} />}
      {name === 'arrow-left' && <ArrowLeft size={size} stroke={stroke} />}
      {name === 'arrow-right' && <ArrowRight size={size} stroke={stroke} />}
      {name === 'confirm' && <Confirm size={size} stroke={stroke} />}
      {name === 'close' && <Close size={size} stroke={stroke} />}
      {name === 'error' && <Error size={size} stroke={stroke} />}
      {name === 'password-show' && <PasswordShow size={size} stroke={stroke} />}
      {name === 'password-hide' && <PasswordHide size={size} stroke={stroke} />}
      {name === 'lock' && <Lock size={size} stroke={stroke} />}
      {name === 'login' && <Login size={size} stroke={stroke} />}
      {name === 'logout' && <Logout size={size} stroke={stroke} />}
      {name === 'avatar-plus' && <AvatarPlus size={size} stroke={stroke} />}
      {name === 'next' && <Next size={size} stroke={stroke} />}
      {name === 'sound' && <Sound size={size} stroke={stroke} />}
      {name === 'stop' && <Stop size={size} stroke={stroke} />}
    </>
  );
};

export default Icon;
